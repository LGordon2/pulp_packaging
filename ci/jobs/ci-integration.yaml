- job-template:
    name: '{platform}-{project}-1-provision'
    defaults: ci-workflow-provision
    node: master
    parameters:
        - choice:
            name: SITE
            choices:
              - qeos
              - os1
            description: |
              Site where to provision resources
        - string:
            name: REPO
            default: https://repos.fedorapeople.org/repos/pulp/pulp/testing/2.5/
            description: |
                The URL to the repository to install Pulp from.
        - string:
            name: TEST_SUITE_BRANCH
            default: master
            description: |
                The git branch to use in the integration test suite, e.g. 'master', 'pulp-2.4', etc
    builders:
        - shell: |
            #!/bin/bash

            cp -v -R $QEOS_CONFIG_ZIP/config/* $WORKSPACE/{topology_path}

            export JSLAVENAME={jslavename}-{platform}
            # Provision Jenkins Slave
            if [ "$JSLAVENAME" != "master" ]
            then
                $WORKSPACE/ci-ops-central/bootstrap/provision_jslave.sh --site=$SITE --project_defaults={project_defaults} \
                --topology=ci-ops-central/project/config/aio_jslave --ssh_keyfile={ssh_keyfile} \
                --jslavename={jslavename}-{platform} --jslaveflavor={jslaveflavor} --jslaveimage={jslaveimage} \
                --jslave_execs={jslave_execs} --jslavecreate --resources_file={jslavename}.json

                TR_STATUS=$?
                if [ "$TR_STATUS" != 0 ]; then echo "ERROR: Provisioning\nSTATUS: $TR_STATUS"; exit 1; fi
            fi

            files=$(ls $WORKSPACE/*.slave 2>/dev/null)
            if [ -e "$files" ]
            then
                cat $WORKSPACE/*.slave >> $WORKSPACE/RESOURCES.txt
            fi

        - inject:
            properties-file: $WORKSPACE/RESOURCES.txt

    publishers:
      - archive:
          artifacts: '*.txt, *.json'
          allow-empty: 'true'
      - trigger-parameterized-builds:
          - project: '{platform}-{project}-2-runtest'
            current-parameters: true
            condition: 'SUCCESS'
            property-file: $WORKSPACE/RESOURCES.txt
            fail-on-missing: true
          - project: '{platform}-{project}-3-teardown'
            current-parameters: true
            condition: 'UNSTABLE_OR_WORSE'
            property-file: $WORKSPACE/RESOURCES.txt
            fail-on-missing: true
      - default-ci-workflow-publishers


- job-template:
    name: '{platform}-{project}-2-runtest'
    defaults: ci-workflow-runtest
    node: '{jslavename}-{platform}'
    builders:
        - copyartifact:
            project: '{platform}-{project}-1-provision'
            filter: '*.txt, *.json'
            target: $WORKSPACE

        - shell: |
            #!/bin/bash
            # This contains OpenStack credentials in a file of the following format:
            #
            # export OS_USERNAME=*username*
            # export OS_PASSWORD=*password*
            # export OS_AUTH_URL=*keystone auth URL*
            # export OS_TENANT_NAME=*tenant name*
            # export OS_TENANT_ID=*tenant id*
            source $OS_CONFIG/qeos_credentials

            # This is the private key for the OpenStack instances the script builds
            cp -v $QEOS_CONFIG_ZIP/config/keys/pulp-ci-key.pem id_rsa

            yum -y install python-pip PyYAML git
            pip install fabric python-keystoneclient python-glanceclient python-novaclient

            cd $WORKSPACE
            git clone https://github.com/pulp/pulp.git
            cd pulp/playpen/deploy/

            # Run the tests against the specified platform
            EXIT=0
            python deploy-environment.py --config config/jenkins/{platform}-config.yml \
            --deployed-config test.json --test-branch $TEST_SUITE_BRANCH --repo $REPO || EXIT=$?
            python run-integration-tests.py --config test.json || EXIT=$?
            python cleanup-environment.py --config test.json || EXIT=$?

            cp -r test $WORKSPACE/test
            rm -rf $WORKSPACE/pulp

    publishers:
      # Publish a pretty graph of the test results
      - junit:
          results: test/*.xml
          keep-long-stdio: true
          test-stability: true
      # Archive the test results
      - archive:
          artifacts: 'test/**'
          allow-empty: 'true'
      # Tear down all the instances that were provisioned
      - trigger-parameterized-builds:
          - project: '{platform}-{project}-3-teardown'
            current-parameters: true
      - default-ci-workflow-publishers

- job-template:
    name: '{platform}-{project}-3-teardown'
    defaults: ci-workflow-provision
    node: master
    builders:
        - shell: |
            #!/bin/bash
            export JSLAVETEARDOWN={jslaveteardown}

            cp -v -R $QEOS_CONFIG_ZIP/config/* $WORKSPACE/{topology_path}

            if [ "$JSLAVETEARDOWN" == "True" ]
            then
              $WORKSPACE/ci-ops-central/bootstrap/teardown_jslave.sh --site=$SITE --project_defaults={project_defaults} \
              --topology=ci-ops-central/project/config/aio_jslave --jslavename=$JSLAVENAME \
              --jslaveusername={jslaveusername} --ssh_keyfile={ssh_keyfile} --jslaveip=$JSLAVEIP --jslaveteardown

              TR_STATUS=$?
              if [ "$TR_STATUS" != 0 ]; then echo "ERROR: Teardown\nSTATUS: $TR_STATUS"; exit 1; fi
            fi

- job-group:
    name: '{platform}-integration-tests'
    jobs:
      - '{platform}-{project}-1-provision'
      - '{platform}-{project}-2-runtest'
      - '{platform}-{project}-3-teardown'

- project:
    name: integration-jobs
    project:
     - integration
    project_defaults:
     - pulp_packaging/ci/config/project_defaults
    topology_path:
     - pulp_packaging/ci/config
    topology:
     - integration-rhel6
    platform:
      - el5
      - el6.5
      - el6.6
      - el7
      - fc19
      - fc20
    ssh_keyfile:
     - pulp_packaging/ci/config/keys/pulp-ci-key.pem
    jobs:
     - '{platform}-integration-tests'
    jslavename:
     - 'jslave-integration-slave'
    jslave_execs:
     - 4
    jslaveimage:
     - rhel-x86_64-7.0-20140915-jenkins
    jslaveflavor:
     - m1.small
    jslaveusername:
     - root
    jslaveteardown:
     - True
